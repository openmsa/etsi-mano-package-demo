# A.18-01.yaml
tosca_definitions_version: tosca_simple_yaml_1_3
description: A sample VNF descriptor with containerized VDUs
imports:
  - etsi_nfv_sol001_vnfd_types.yaml # VNFD definitions based on SOL001 v4.2.1 draft

data_types:
  Example.datatypes.nfv.VnfAdditionalConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfAdditionalConfigurableProperties
    properties:
      name_prefix_in_cism:
        type: string
        required: false
      dns_server:
        type: list
        entry_schema:
          type: string
        required: false
  Example.datatypes.nfv.VnfConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfConfigurableProperties
    properties:
      additional_configurable_properties:
        type: Example.datatypes.nfv.VnfAdditionalConfigurableProperties

node_types:
  ExampleCorp.vDB.0_1.0_2:
    derived_from: tosca.nodes.nfv.VNF
    properties:
      descriptor_id:
        default: 5af09567-fc5f-4be9-b372-0cc431ad5c03
        constraints: [ equal: 5af09567-fc5f-4be9-b372-0cc431ad5c03 ]
      descriptor_version:
        default: "0.2"
        constraints: [ equal: "0.2" ]
      provider:
        default: "ExampleCorp ðŸ’¦"
        constraints: [ equal: "ExampleCorp ðŸ’¦" ]
      product_name:
        default: "vDB ðŸ’Ž"
        constraints: [ equal: "vDB ðŸ’Ž" ]
      software_version:
        default: "0.1"
        constraints: [ equal: "0.1" ]
      vnfm_info:
       type: list
       required: true
       description: Identifies VNFM(s) compatible with the VNF
       entry_schema:
        type: string
        constraints:
          - equal: 'etsivnfm:v0.1.0'
       default: [ 'etsivnfm:v0.1.0' ]
      flavour_id:
        default: simple
        constraints: [ valid_values:  [ simple, complex ] ]
      flavour_description:
        default: ""
    requirements:
      - virtual_link:
         capability: tosca.capabilities.nfv.VirtualLinkable
         occurrences: [0, 0]
      - virtual_link_1:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]
      - virtual_link_2:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]
      - virtual_link_virt:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]
      - virtual_link_intra_1:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]
      - virtual_link_intra_2:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, 1]

topology_template:
  substitution_mappings:
    node_type: ExampleCorp.vDB.0_1.0_2
    requirements:
      virtual_link_1: [ vdu1Cp1, virtual_link ]
      virtual_link_2: [ vdu2Cp1, virtual_link ]
      virtual_link_virt: [ VirtCp1, virtual_link ]
      virtual_link_intra_1: [ vdu1Cp2, virtual_link ]
      virtual_link_intra_2: [ vdu2Cp2, virtual_link ]

  node_templates:
    VNF:
      type: ExampleCorp.vDB.0_1.0_2
      properties:
        product_info_name: "Firewall ðŸ”’"
        product_info_description: "ðŸ§± Firewall with new functionality"
          # modifiable_attributes: {}   # All of the VNF  modifiable properties should go here
        flavour_id: simple
        flavour_description: "ðŸ§± A specimen copy of the VNF Descriptor for containers"
      interfaces:
        Vnflcm:
          operations: 
            # instantiate_start:
            # instantiate: # A sample illustration to run a instantiation script without any inputs.
            instantiate_end: helm_test
            scale: #Invoked upon receipt of a Scale VNF request
              inputs:
                type: "scale_out"
                aspect: "default"
      artifacts:
        helm_test:
          description: Post instantiation test script
          type: tosca.artifacts.Implementation.Bash
          file: Artifacts/Tests/helm_test.sh
      requirements:
        - virtual_link: public

    lb_mciop:
      type: tosca.nodes.nfv.Mciop
      requirements:
        - associatedVdu: Vdu_1
        - dependency: opendb_mciop
      artifacts:
        lb_helm:
          description: Helm Chart for lb Pod
          type: tosca.artifacts.nfv.HelmChart
          #file: http://nexus.ubiqube.com/repository/raw/ci-artefacts/docker-alpine.tar
          file: Artifacts/Images/wordpress-22.4.10.tgz
          artifact_version: "22.4.10"

    vdu1Cp1:
      type: tosca.nodes.nfv.VduCp
      description: "Cluster vNIC"
      properties:
        layer_protocols: [ ethernet ]
        vnic_type: normal
        order: 1
      requirements:
        - virtual_binding: Vdu_1

    vdu1Cp2:
      type: tosca.nodes.nfv.VduCp
      description: "IntraVNF External vNIC"
      properties:
        layer_protocols: [ ethernet ]
        vnic_type: macvlan
        bitrate_requirement:  10000000000 #10 GiB
        order: 2
        trunk_mode: true
      requirements:
        - virtual_binding: Vdu_1

    VirtCp1:
      type: tosca.nodes.nfv.VirtualCp
      properties:
        layer_protocols: [ ipv6 ]
        protocol:
        - address_data:
          - address_type: ip_address
            l3_address_data:
              floating_ip_activated: true
              ip_address_assignment: false
              ip_address_type: ipv6
              number_of_ip_address: 1
          associated_layer_protocol: ipv6
        additionalServiceData:
          - portData:
            - name: DBAccessService
              protocol: tcp
              port: 8001
              portConfigurable: false
            - name: DBConfigService
              protocol: tcp
              port: 443
              portConfigurable: false
      requirements:
        - target: Vdu_1

    Vdu_1:
      type: tosca.nodes.nfv.Vdu.OsContainerDeployableUnit
      properties:
        name: "lb"
        description: "Advanced Software Load Balancer"
        configurable_properties:
          additional_vnfc_configurable_properties:
        requested_additional_capabilities:
          name:
            preferred_requested_additional_capability_version: string
            target_performance_parameters:
              key: value
            requested_additional_capability_name: string
            support_mandatory: false
            min_requested_additional_capability_version: string
        logical_node:
          name:
            logical_node_requirements:
              key: value
        mcio_constraint_params:
          - NODE_POOL
        mcio_identification_data: # McioIdentificationData
          name: name
          type: Deployment
        nfvi_constraints:
          a: b
        vdu_profile:
          min_number_of_instances: 1
          max_number_of_instances: 4
          nfvi_maintenance_info:
            supported_migration_type:
              - NO_MIGRATION
              - OFFLINE_MIGRATION
      requirements:
        - container: Vdu_1_Container_1

    Vdu_1_Container_1:
      type: tosca.nodes.nfv.Vdu.OsContainer
      properties:
        name: "lb Container"
        description: "Advanced Software Load Balancer"
        requested_cpu_resources: 100 # In Milli-Cpus, ie 0.1 CPU
        cpu_resource_limit: 1000 # In Milli-Cpus, ie 1 CPU, single threaded
        requested_memory_resources: 10 MiB
        memory_resource_limit: 100 MiB
        requested_ephemeral_storage_resources: 1GiB
        ephemeral_storage_resource_limit: 1 GiB
        extended_resource_requests: # List tosca.datatypes.nfv.ExtendedResourceData
          - extended_resource:
              key: value
            amount: 1234
        huge_pages_resources: # List of list of tosca.datatypes.nfv.Hugepages
          - hugepage_size: 512 Mib
            requested_size: 1 Gib
        cpu_pinning_requirements: # tosca.datatypes.nfv.VirtualCpuPinning
          virtual_cpu_pinning_policy: static
          virtual_cpu_pinning_rule:
            - a
            - b
      artifacts:
        sw_image:
          type: tosca.artifacts.nfv.SwImage
          file: Artifacts/Images/lbimage.tar.bz2
          name: lb
          version: "3.1-dev1"
          checksum:
            algorithm: sha-256
            hash: a82d901a8ae4c44f137ab02d35ff1d98d0860045d58c6601d8310fd8f73e79af
          container_format: docker
          size: "1024MB"


    opendbDbStorage:
      type: tosca.nodes.nfv.Vdu.VirtualBlockStorage
      properties:
        virtual_block_storage_data: # tosca.datatypes.nfv.VirtualBlockStorageData
          size_of_storage: 5 GB
          vdu_storage_requirements:
            key: value
          rdma_enabled: false
        per_vnfc_instance: true
        nfvi_maintenance_info:
        
